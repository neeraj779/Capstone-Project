// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Swar.API.Contexts;

#nullable disable

namespace Swar.API.Migrations
{
    [DbContext(typeof(SwarContext))]
    [Migration("20240807074837_initial")]
    partial class initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.32")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Swar.API.Models.DBModels.LikedSong", b =>
                {
                    b.Property<int>("LikeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("LikeId"));

                    b.Property<DateTime>("LikedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("SongId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("LikeId");

                    b.HasIndex("UserId", "SongId")
                        .IsUnique();

                    b.ToTable("LikedSongs");
                });

            modelBuilder.Entity("Swar.API.Models.DBModels.PlayHistory", b =>
                {
                    b.Property<int>("HistoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("HistoryId"));

                    b.Property<DateTime>("PlayedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("SongId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("HistoryId");

                    b.HasIndex("UserId");

                    b.ToTable("PlayHistories");
                });

            modelBuilder.Entity("Swar.API.Models.DBModels.Playlist", b =>
                {
                    b.Property<int>("PlaylistId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("PlaylistId"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsPrivate")
                        .HasColumnType("boolean");

                    b.Property<string>("PlaylistName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("PlaylistId");

                    b.HasIndex("UserId");

                    b.ToTable("Playlists");
                });

            modelBuilder.Entity("Swar.API.Models.DBModels.PlaylistSong", b =>
                {
                    b.Property<int>("PlaylistId")
                        .HasColumnType("integer");

                    b.Property<string>("SongId")
                        .HasColumnType("text");

                    b.HasKey("PlaylistId", "SongId");

                    b.ToTable("PlaylistSongs");
                });

            modelBuilder.Entity("Swar.API.Models.DBModels.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("UserId"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<byte[]>("HashedPassword")
                        .IsRequired()
                        .HasColumnType("bytea");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<byte[]>("PasswordHashKey")
                        .IsRequired()
                        .HasColumnType("bytea");

                    b.Property<DateTime>("RegistrationDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("Role")
                        .HasColumnType("integer");

                    b.Property<int>("UserStatus")
                        .HasColumnType("integer");

                    b.HasKey("UserId");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            UserId = 100,
                            Email = "admin@gmail.com",
                            Gender = "Male",
                            HashedPassword = new byte[] { 255, 237, 216, 186, 55, 119, 53, 21, 24, 101, 208, 93, 160, 173, 28, 92, 104, 86, 100, 161, 40, 15, 43, 19, 174, 177, 229, 107, 154, 235, 181, 193, 58, 49, 152, 115, 11, 135, 40, 131, 10, 205, 223, 195, 82, 155, 8, 121, 175, 146, 253, 243, 192, 129, 58, 171, 199, 171, 51, 124, 16, 198, 235, 155 },
                            Name = "admin",
                            PasswordHashKey = new byte[] { 104, 13, 235, 222, 119, 45, 76, 170, 192, 255, 83, 106, 166, 215, 13, 249, 253, 190, 26, 142, 96, 178, 243, 128, 97, 239, 44, 197, 176, 178, 230, 83, 37, 86, 98, 168, 69, 7, 46, 41, 19, 115, 20, 25, 50, 50, 172, 254, 125, 159, 155, 119, 249, 177, 103, 18, 70, 58, 235, 202, 95, 169, 224, 63, 80, 178, 24, 2, 24, 107, 158, 132, 170, 224, 124, 58, 37, 152, 15, 168, 105, 186, 76, 224, 57, 86, 84, 122, 93, 38, 178, 110, 162, 201, 96, 170, 225, 237, 28, 85, 131, 59, 198, 141, 146, 94, 111, 116, 242, 85, 55, 246, 68, 5, 240, 191, 197, 107, 118, 227, 234, 105, 43, 237, 35, 116, 115, 99 },
                            RegistrationDate = new DateTime(2024, 8, 7, 7, 48, 37, 231, DateTimeKind.Utc).AddTicks(2065),
                            Role = 0,
                            UserStatus = 0
                        });
                });

            modelBuilder.Entity("Swar.API.Models.DBModels.LikedSong", b =>
                {
                    b.HasOne("Swar.API.Models.DBModels.User", "User")
                        .WithMany("LikedSongs")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Swar.API.Models.DBModels.PlayHistory", b =>
                {
                    b.HasOne("Swar.API.Models.DBModels.User", "User")
                        .WithMany("PlayHistories")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Swar.API.Models.DBModels.Playlist", b =>
                {
                    b.HasOne("Swar.API.Models.DBModels.User", "User")
                        .WithMany("Playlists")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Swar.API.Models.DBModels.PlaylistSong", b =>
                {
                    b.HasOne("Swar.API.Models.DBModels.Playlist", "Playlist")
                        .WithMany("PlaylistSongs")
                        .HasForeignKey("PlaylistId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Playlist");
                });

            modelBuilder.Entity("Swar.API.Models.DBModels.Playlist", b =>
                {
                    b.Navigation("PlaylistSongs");
                });

            modelBuilder.Entity("Swar.API.Models.DBModels.User", b =>
                {
                    b.Navigation("LikedSongs");

                    b.Navigation("PlayHistories");

                    b.Navigation("Playlists");
                });
#pragma warning restore 612, 618
        }
    }
}
